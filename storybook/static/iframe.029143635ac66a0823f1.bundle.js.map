{"version":3,"file":"static/iframe.029143635ac66a0823f1.bundle.js","sources":["webpack:///./stories/sandbox-utils.js"],"sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\nimport { getParameters } from 'codesandbox/lib/api/define';\n\nconst GIT_URL =\n  'https://api.github.com/repos/frontend-collective/react-sortable-tree/contents';\n\nexport const SANDBOX_URL = 'https://codesandbox.io/api/v1/sandboxes/define';\n\n// full url for github api call\nconst getURL = filename => `${GIT_URL}/stories/${filename}`;\n\n// strip ../src from the src\nconst strip = code =>\n  code.replace('../src', 'react-sortable-tree').replace(\n    `// In your own app, you would need to use import styles once in the app\n// import 'react-sortable-tree/styles.css';`,\n    ''\n  );\n\n// modify code so we can just have one file in the sandbox. index.js\nconst modify = code => {\n  const addToTop = `import { render } from 'react-dom';\\nimport 'react-sortable-tree/style.css';\\n`;\n  const addToBottom = `\\nrender(<App />, document.getElementById('root'));`;\n  return addToTop + code + addToBottom;\n};\n\n// parse. Possible the atob throws an exception\nconst parse = base64 => {\n  let parsed;\n  try {\n    parsed = atob(base64);\n  } catch (error) {\n    console.error('Failed to parse base64 from GitHub', error); // eslint-disable-line no-console\n  }\n  return parsed;\n};\n\nconst html = `<div id=\"root\"></div>`;\n\n// using codesandbox util\n// returns the payload to send to the define endpoint\nconst getPayload = code =>\n  getParameters({\n    files: {\n      'package.json': {\n        content: {\n          dependencies: {\n            react: 'latest',\n            'react-dom': 'latest',\n            'prop-types': 'latest',\n            'react-dnd': 'latest',\n            'react-dnd-html5-backend': 'latest',\n            'react-sortable-tree-theme-file-explorer': 'latest',\n            'react-dnd-touch-backend': 'latest',\n            'react-sortable-tree': 'latest',\n          },\n        },\n      },\n      'index.js': {\n        content: code,\n      },\n      'index.html': {\n        content: html,\n      },\n    },\n  });\n\n// set the form values and submit the form\nconst sendSandboxRequest = parameters => {\n  document.getElementById('codesandbox-parameters').value = parameters;\n  document.getElementById('codesandbox-form').submit();\n};\n\n// what is called when the view sandbox element is clicked\n// get blob from github and the process it and send the POST request\nexport const handleClick = file => event => {\n  event.preventDefault();\n  const url = getURL(file);\n  fetch(url)\n    .then(response => response.json())\n    .catch(error => console.error('Error getting blob from GitHub:', error)) // eslint-disable-line no-console\n    .then(response => {\n      const parsed = parse(response.content);\n      if (!parsed) {\n        return;\n      }\n      const payload = getPayload(modify(strip(parsed)));\n      sendSandboxRequest(payload);\n    });\n};\n"],"mappings":"AAAA","sourceRoot":""}